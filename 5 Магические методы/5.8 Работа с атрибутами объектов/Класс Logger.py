# Требовалось реализовать класс Logger. При создании экземпляра класс не должен был принимать никаких аргументов.
#
# Предполагалось, что при установке или изменении значения атрибута экземпляра класса Logger будет выводиться текст:
#
# Изменение значения атрибута <имя атрибута> на <новое значение атрибута>
# Также планировалось, что при удалении атрибута будет выводиться текст:
#
# Удаление атрибута <имя атрибута>
# Программист торопился и решил задачу неправильно. Дополните приведенный ниже код и реализуйте правильный класс Logger.
#
# Примечание. Никаких ограничений касательно реализации класса Logger нет, она может быть произвольной.

class Logger:
    def __setattr__(self, name, value):
        print(f'Изменение значения атрибута {name} на {value}')
        self.__dict__[name] = value

    def __delattr__(self, name):
        print(f'Удаление атрибута {name}')
        del self.__dict__[name]

obj = Logger()

obj.attr = 1
del obj.attr
